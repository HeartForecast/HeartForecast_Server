name: Java CI/CD with Gradle and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Create env directory and spring.env file
        run: |
          mkdir -p env
          echo "DB_URL=${{ secrets.DB_URL }}" >> env/spring.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> env/spring.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> env/spring.env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> env/spring.env
          echo "ACCESS_TIME=${{ secrets.ACCESS_TIME }}" >> env/spring.env
          echo "REFRESH_TIME=${{ secrets.REFRESH_TIME }}" >> env/spring.env
          echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> env/spring.env
          echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> env/spring.env
          echo "NAVER_PROD_REDIRECT_URL=${{ secrets.NAVER_PROD_REDIRECT_URL }}" >> env/spring.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> env/spring.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> env/spring.env
          echo "GOOGLE_PROD_REDIRECT_URL=${{ secrets.GOOGLE_PROD_REDIRECT_URL }}" >> env/spring.env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> env/spring.env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> env/spring.env
          echo "KAKAO_PROD_REDIRECT_URL=${{ secrets.KAKAO_PROD_REDIRECT_URL }}" >> env/spring.env
          echo "SERVER_URL=${{ secrets.SERVER_URL }}" >> env/spring.env

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: gimseungbin/heart-forecast-app:latest

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/HeartForecast
            docker compose pull
            docker compose down
            docker compose up -d